security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ADMIN: [ROLE_WORKER]
    encoders:
            App\Entity\User: bcrypt
            Symfony\Component\Security\Core\User\User:
                algorithm: bcrypt

    providers:
        #db_provider:
        #    entity:
         #       class: App\Entity\User
        db_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/
            provider: db_provider
            form_login:
                login_path: login
                check_path: login
                username_parameter: _email
                password_parameter: _password
                default_target_path: homepage
                always_use_default_target_path: true
            logout: true
            anonymous: ~
            #pattern:    ^/
            #http_basic: ~
            #provider: db_provider

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_denied_url: /
    access_control:
         - { path: ^/(login|register), roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/workers, roles: ROLE_ADMIN }
         - { path: ^/Services/new, roles: ROLE_ADMIN }
         - { path: ^/Services/edit, roles: ROLE_ADMIN }
         - { path: ^/Services/remove, roles: ROLE_ADMIN }
         - { path: ^/$, role: IS_AUTHENTICATED_FULLY }
